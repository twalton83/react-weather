{"version":3,"sources":["components/Header.js","components/Form.js","components/WeatherCard.js","components/Display.js","config.js","images/clear.jpg","images/cloudy.jpg","images/rainy.jpg","App.js","index.js"],"names":["Header","styled","header","TempButtons","div","H1","h1","Button","button","props","currentUnit","Navbar","handleUnitChange","value","onClick","Section","section","Form","form","Input","input","Label","label","SearchForm","handleSubmit","handleInputChange","htmlFor","onChange","name","type","Card","WeatherCard","weather","kelvinToCelsius","temp","toFixed","kelvinToFarenheit","main","temp_max","temp_min","Wrapper","Display","AppWrapper","background","clearImage","App","useState","data","setData","weatherBackground","setWeatherBackground","cityName","stateCode","countryCode","unit","queryValues","setQueryValues","fetchWeather","a","fetch","then","res","status","json","useEffect","condition","toLowerCase","rainyImage","cloudyImage","handleBackground","e","target","preventDefault","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b526d3e5.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Header = styled.header`\ndisplay: grid;\ngrid-template-columns: 50% 50%;\nheight: 10vh;\nbackground-color: rgba(0,0,0,.3);\n`\n\nconst TempButtons = styled.div`\ndisplay: flex;\nflex-direction: row-reverse;\nalign-items: center;\noutline: none;\nbackground-color: rgba(0,0,0, 0.65);\nbackdrop-filter: blur(10px);\nheight: 10vh;\n`\n\nconst H1 = styled.h1`\ncolor: white;\ntext-align: center;\n`\n\nconst Button = styled.button`\nbackground: ${props => props.currentUnit ? \"rgba(179, 179, 179, .5)\" : \"none\"};\nborder-radius: 5px;\nborder: none;\nheight: 3rem;\nwidth: 3rem;\nfont-size: 2rem;\nmargin: 0 1rem;\ncolor: white;\n&:focus {\n  outline: black;\n}\n`\n\nexport default function Navbar( { handleUnitChange, currentUnit }) {\n\n\n  return (\n    <Header>\n       <H1>My.Weather</H1>\n        <TempButtons>\n         <Button currentUnit = {currentUnit === \"Farenheit\"} value =\"Farenheit\" onClick={ handleUnitChange }>\n            F°\n         </Button>\n         <Button currentUnit = {currentUnit === \"Celsius\"} value = \"Celsius\" onClick={ handleUnitChange }>\n            C°\n         </Button>\n        </TempButtons>\n    </Header>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Section = styled.section`\nbackground-color: rgba(0,0,0, 0.65);\nbackdrop-filter: blur(5px);\n`\n\nconst Form = styled.form`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nheight: 50%;\ncolor: white;\n`\nconst Input = styled.input`\nborder: 1px solid grey;\nheight: 2rem;\nborder-radius: 5px;\nwidth: 80%;\n`\nconst Label = styled.label`\nmargin: 0 auto;\nfont-size: 1.5rem;\nmargin-top: .5rem;\n`\n\nconst Button = styled.button`\ncolor: white;\nfont-size: 1.1rem;\nbackground-color: rgba(0,0,0, .9);\nborder: none;\nheight: 3rem;\nwidth: 5rem;\nbox-shadow: 0px 0px 8px rgba(0,0,0,.2);\nmargin: 1rem;\n`\n\nexport default function SearchForm({ handleSubmit, handleInputChange }) {\n  return (\n    <Section>\n      <Form>\n      <Label htmlFor=\"cityName\">\n        City: \n      </Label>\n      <Input onChange = { handleInputChange } name = \"cityName\" type=\"text\"/>\n\n      <Label htmlFor=\"stateName\">\n        State: \n      </Label>\n      <Input onChange = { handleInputChange } name = \"stateCode\" type=\"text\"/>\n\n      <Label htmlFor=\"countryCode\">\n        Country: \n      </Label>\n      <Input onChange = { handleInputChange } name = \"countryCode\" type=\"text\"/>\n\n      <Button onClick={ handleSubmit }>Search</Button>\n      </Form>\n  </Section>\n\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Card = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\nmin-height: 3rem;\nwidth: 100%;\nfont-size: 2.5rem;\ntext-align: left;\ncolor: white;\n& p {\n  margin: .5rem;\n}\n`\n\nexport default function WeatherCard({ weather, currentUnit }) {\n\n  const kelvinToCelsius = (temp) => {\n    return (temp - 273.15).toFixed(1)\n  }\n\n  const kelvinToFarenheit = (temp) => {\n    return ((temp - 273.15) * 9/5 + 32).toFixed(1)\n  }\n  return (\n    <Card>\n      { weather &&\n        <div>\n        <h1>\n          { weather.name }\n        </h1>\n        \n        <p>\n          { weather.weather[0].main }\n        </p>\n\n        <p> \n          Current: { currentUnit === \"Farenheit\" ? kelvinToFarenheit(weather.main.temp) : kelvinToCelsius(weather.main.temp) }° \n        </p>\n        <p>\n          High: { currentUnit === \"Farenheit\" ? kelvinToFarenheit(weather.main.temp_max) : kelvinToCelsius(weather.main.temp_max) }° \n        </p>\n        <p>\n          Low:  { currentUnit === \"Farenheit\" ? kelvinToFarenheit(weather.main.temp_min) : kelvinToCelsius(weather.main.temp_min) }° \n        </p>\n        </div>\n      } \n      { !weather && <h1>Could not fetch the weather!</h1>}\n    </Card>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport SearchForm from './Form'\nimport WeatherCard from './WeatherCard'\n\nconst Wrapper = styled.section`\ndisplay: grid;\ngrid-template-columns: 50% 50%;\nheight: 90vh;\nwidth: 100%;\nmargin: 0 auto;\nbackground-color: rgba(0,0,0,.3);\n@media(max-width: 800px){\n  height: 60vh;\n  width: 95%;\n}\n`\n\n\nexport default function Display({ weather, handleSubmit, handleInputChange, currentUnit }) {\n  \n  return (\n    <Wrapper>\n     <WeatherCard weather = { weather || null  } currentUnit = {currentUnit} /> \n     <SearchForm handleSubmit = { handleSubmit } handleInputChange = { handleInputChange } />\n    </Wrapper>\n  )\n}\n","const API_KEY = '9c89e50a971f26aaebbf45ab7172b7a2'\n\nexport default API_KEY","export default __webpack_public_path__ + \"static/media/clear.1ddc0c14.jpg\";","export default __webpack_public_path__ + \"static/media/cloudy.32526ca7.jpg\";","export default __webpack_public_path__ + \"static/media/rainy.7a55a063.jpg\";","import React, { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport Display from './components/Display'\nimport styled from 'styled-components'\nimport API_KEY from './config.js'\nimport clearImage from './images/clear.jpg'\nimport cloudyImage from './images/cloudy.jpg'\nimport rainyImage from './images/rainy.jpg'\n\nconst AppWrapper = styled.div`\ndisplay: grid;\ngrid-template-rows: 10vh 90vh;\nbackground-color: red;\nbackground: url(${props => props.background || clearImage});\nbackground-size: cover;\ntransition: background 2s ease;\n`\nfunction App() {\n\n  const [data, setData] = useState(null);\n\n  const [weatherBackground, setWeatherBackground] = useState(null);\n\n  const [queryValues, setQueryValues] = useState({\n    cityName: 'Los Angeles',\n    stateCode: 'CA',\n    countryCode: 'US',\n    unit: 'Farenheit'\n  })\n\n  const fetchWeather = async () => {\n    const data = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${queryValues.cityName},${queryValues.stateCode},${queryValues.countryCode}&appid=${API_KEY}`)\n    .then(res => res.status === 200 ? res.json() : null )\n    .then(data => data)\n    return data\n    }\n\n  useEffect(() => {\n    fetchWeather()\n    .then(res => setData(res))\n  }, [])\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target\n    setQueryValues({...queryValues, [name] : value})\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    fetchWeather()\n      .then(res => setData(res))\n  }\n\n  const handleUnitChange = (e) => {\n    setQueryValues({...queryValues, unit: e.target.value })\n  }\n\n  const handleBackground = (weather) => {\n    const condition = weather.toLowerCase()\n    if(condition === \"clear\") return clearImage\n    if(condition === \"rain\") return rainyImage\n    if(condition === \"clouds\") return cloudyImage\n    return clearImage\n  }\n\n  useEffect(() => {\n    if(data){\n    const background = handleBackground(data.weather[0].main)\n    setWeatherBackground(background)\n    }\n  }, [data])\n\n\n  return (\n    <AppWrapper background = { weatherBackground }>\n      <Header \n      currentUnit = { queryValues.unit }\n      handleUnitChange = { handleUnitChange } />\n      <Display \n        currentUnit = { queryValues.unit }\n        weather = { data }\n        handleSubmit = { handleSubmit } \n        handleInputChange = { handleInputChange }\n      />\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}